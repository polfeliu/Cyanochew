cyanobyte: 0.1.0
extensions:
  foo: bar
fields:
  FieldA:
    bitEnd: 4
    bitStart: 7
    description: This is a few bits
    enum: null
    readWrite: R
    register: '#/registers/RegisterA'
    title: Read-only fields for RegisterA
    type: number
  FieldB:
    bitEnd: 2
    bitStart: 3
    description: This is fewer bits
    enum:
      VAL_1:
        title: Value 1
        value: 1
      VAL_2:
        title: Value 2
        value: 2
      VAL_3:
        title: Value 3
        value: 4
      VAL_4:
        title: Value 4
        value: 8
    readWrite: W
    register: '#/registers/RegisterA'
    title: Write-only fields for RegisterA
    type: enum
  FieldC:
    bitEnd: 1
    bitStart: 1
    description: A single-bit
    enum: null
    readWrite: R/W
    register: '#/registers/RegisterA'
    title: Read/write field for RegisterA
    type: number
  FieldD:
    bitEnd: 0
    bitStart: 0
    description: A bit that is neither readable nor writeable
    enum: null
    readWrite: n
    register: '#/registers/RegisterC'
    title: This field should never appear
    type: number
functions:
  Return:
    computed:
      Array:
        logic:
        - summation:
          - sum:
            - 1024
            - 1024
        - send: summation
        return:
        - summation
        - summation
        variables:
          summation: int16
      Number:
        logic:
        - summation:
          - sum:
            - 1024
            - 1024
        - send: summation
        return: summation
        variables:
          summation: int16
      Void:
        logic:
        - summation:
          - sum:
            - 1024
            - 1024
        - send: summation
        variables:
          summation: int16
    description: Computes and returns
    register: '#/registers/RegisterA'
    title: Return a value
  _lifecycle:
    computed:
      Begin:
        logic:
        - output: = 1
        - send: output
        return: output
        variables:
          output: int8
      End:
        logic:
        - output: = 1
        - send: output
        return: output
        variables:
          output: int8
    description: Enables features on device
    register: '#/registers/RegisterA'
    title: Code to run when device class is constructed
i2c:
  address:
  - 16
  - 32
  - 48
  addressMask: 255
  addressType: 7-bit
info:
  contact:
    email: felker@google.com
    name: Nick Felker
    url: https://github.com/google/cyanobyte
  copyright:
    date: '2019'
    name: Google Inc.
  description: Example of a package
  license:
    name: Apache-2.0
  package: com.cyanobyte
  title: Example
  version: 0.1.0
registers:
  RegisterA:
    address: 0
    description: An 8-bit register
    length: 8
    title: First example
  RegisterB:
    address: 1
    description: A 16-bit register
    length: 16
    title: Second example
  RegisterC:
    address: 2
    description: A 32-bit register
    length: 32
    title: Third example
  RegisterD:
    address: 3
    description: A dummy register that has no data
    length: 0
    title: Fourth example
